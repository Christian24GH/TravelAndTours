# ---------------------------------------------
# Stage 1 – Composer dependencies
# ---------------------------------------------
FROM composer:2 AS build
WORKDIR /app

# Install system dependencies needed by some PHP extensions
RUN apt-get update && apt-get install -y zip unzip git curl libzip-dev libxml2-dev

# Copy only composer files for caching
COPY composer.json composer.lock ./

# Disable scripts during build to avoid artisan errors
RUN composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist --no-scripts

# Copy the rest of Laravel project
COPY . .

# ---------------------------------------------
# Stage 2 – Runtime (Apache + PHP)
# ---------------------------------------------
FROM php:8.2-apache

WORKDIR /var/www/html

# Install system dependencies + PHP extensions
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip unzip git curl libzip-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install pdo pdo_mysql pdo_pgsql gd mbstring exif pcntl bcmath xml zip \
    && rm -rf /var/lib/apt/lists/*

# Enable Apache mod_rewrite
RUN a2enmod rewrite

# Copy Laravel app from build stage
COPY --from=build /app ./

# Set Apache document root to Laravel public/
ENV APACHE_DOCUMENT_ROOT=/var/www/html/public
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/000-default.conf \
    && sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# Set permissions for Laravel storage and cache
RUN chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# Run Laravel post-install scripts (now that .env & storage exist)
RUN php artisan config:clear || true
RUN php artisan cache:clear || true
RUN composer dump-autoload

# Expose port 80
EXPOSE 80

# Start Apache
CMD ["apache2-foreground"]
